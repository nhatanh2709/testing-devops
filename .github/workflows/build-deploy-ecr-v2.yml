on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build: 
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR
        run: |
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t staging/nestjs .

      - name: Tag Docker image to ECR
        run: |
          docker tag staging/nestjs:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/staging/nestjs:latest
    
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/staging/nestjs:latest

  deploy:
    runs-on: self-hosted

   
    steps:
      - uses: actions/checkout@v4
      - name: Deploy Frontend
        run: |
            ls
            pwd
            cd /projects/gitops/testing-devops
            git config --global --add safe.directory /projects/gitops/testing-devops
            git pull origin main
            sudo docker rm -f \$(docker ps -aq)
            docker-compose -f docker-compose.yaml up -d


